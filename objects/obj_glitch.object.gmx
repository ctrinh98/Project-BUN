<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1486618625</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>glitch = false;// sets up glitch variable
active = false;// sets up active variable
ammount = 20;//sets up the number of glitch images - change if needed
randomize();// sets new random seed

//initialises the glitch images and drawing coordinates
var i;
for (i=1;i&lt;ammount;i++)
    {
    spr_custom[i] = noone;
    oldx[i] = 0;// initialises old X position to 0
    oldy[i] = 0;// initialises old Y position to 0
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>glitch = false;//reset glitch
active = false;//reset active

//delete the glitch images
var i;
for (i=1;i&lt;ammount;i++)
    {
    if (sprite_exists(spr_custom[i]))
        {
        sprite_delete(spr_custom[i]);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if glitch is true (from spacebar or your trigger) set an alarm for how 
//long you want them to be visable
if (glitch)
    {
    glitch = false;
    if (alarm[0] = -1) alarm[0] = 5;//change "5" to whatever looks best.
    active = true;
    }

//take random sized sections of the screen and make them images, saving their
//original X/Y positions and adding or subracting a random ammount    
if (active)
    {
    active = false;
    var i;
    for (i=1;i&lt;ammount;i++)
        {
        x1 = irandom(view_wview-256);//random X position to get sprite from -max width of sprite needed
        y1 = irandom(view_hview-64);//random Y position to get sprite from -max height of sprite needed
        w1 = irandom_range(4,256);//random width of sprite (min/max)
        h1 = irandom_range(4,64);//random height of sprite (min/max)
        spr_custom[i] = sprite_create_from_surface(application_surface, x1, y1, w1, h1, false, false, 0, 0);//create sprite
        oldx[i] = (x1+irandom_range(-16,16));//get X position and adjust it to offset glitch sprite (min/max)
        oldy[i] = (y1+irandom_range(-16,16));//get Y position and adjust it to offset glitch sprite (min/max)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if glitch is true (from spacebar or your trigger) set an alarm for how 
//long you want them to be visable
if (glitch)
    {
    glitch = false;
    if (alarm[0] = -1) alarm[0] = 5;//change "5" to whatever looks best.
    active = true;
    }

//take random sized sections of the screen and make them images, saving their
//original X/Y positions and adding or subracting a random ammount    
if (active)
    {
    active = false;
    var i;
    for (i=1;i&lt;ammount;i++)
        {
        x1 = irandom(view_wview-256);//random X position to get sprite from -max width of sprite needed
        y1 = irandom(view_hview-64);//random Y position to get sprite from -max height of sprite needed
        w1 = irandom_range(4,256);//random width of sprite (min/max)
        h1 = irandom_range(4,64);//random height of sprite (min/max)
        spr_custom[i] = sprite_create_from_surface(application_surface, x1, y1, w1, h1, false, false, 0, 0);//create sprite
        oldx[i] = (x1+irandom_range(-16,16));//get X position and adjust it to offset glitch sprite (min/max)
        oldy[i] = (y1+irandom_range(-16,16));//get Y position and adjust it to offset glitch sprite (min/max)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw the glitch images
//use draw_sprite_ext for more options

var i;
for (i=1;i&lt;ammount;i++)
    {
    if (sprite_exists(spr_custom[i]))
        {
        draw_sprite(spr_custom[i],0,oldx[i],oldy[i]);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
